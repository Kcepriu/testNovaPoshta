{"version":3,"file":"static/js/800.7b0ae582.chunk.js","mappings":"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","sources":["components/Spinner/Spinner.styled.js","components/Spinner/Spinner.js","helpers/constants.js","components/SearchTTN/SearchTTN.styled.js","components/SearchTTN/SearchTTN.js","reduxe/selectors.js","components/HistoryDocuments/HistoryDocuments.styled.js","components/HistoryDocuments/HistoryDocuments.js","components/StatusDocument/StatusDocument.styled.js","components/StatusDocument/StatusDocument.js","components/WarningInformation/WarningInformation.styled.js","components/WarningInformation/WarningInformation.js","pages/Documents/Documents.styled.js","pages/Documents/Documents.js","servises/apiNovaPoshta.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.2);\n  z-index: 1200;\n`;\n","import { Bars } from 'react-loader-spinner';\nimport { createPortal } from 'react-dom';\nimport { Overlay } from './Spinner.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Spinner = () => {\n  return createPortal(\n    <Overlay className=\"overlay\">\n      <Bars\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        ariaLabel=\"bars-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </Overlay>,\n    modalRoot\n  );\n};\n\nexport default Spinner;\n","export const PAGE_FROM_REQUEST = 50;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 10px;\n  margin-top: 10px;\n`;\n\nexport const Input = styled.input`\n  border-radius: 10px;\n  padding: 8px 16px;\n`;\nexport const Buttom = styled.button`\n  border-radius: 10px;\n  padding: 4px 8px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: blue;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Form, Buttom, Input } from './SearchTTN.styled';\nimport * as Texts from 'helpers/constantText';\n\nconst SearchTTN = () => {\n  const navigate = useNavigate();\n  const { documentId = '' } = useParams();\n\n  const [numberTTN, setNumberTTN] = useState(documentId);\n\n  useEffect(() => {\n    setNumberTTN(documentId);\n  }, [documentId]);\n\n  const handlerChangeInput = evn => {\n    setNumberTTN(evn.target.value);\n  };\n\n  const handlerSubmitForm = event => {\n    //^\\d{14}$\n    //^[A-Z]{4}\\d{10}[A-Z]{3}$\n    event.preventDefault();\n    const numDoc = event.target.elements.numberTTN.value;\n    navigate(`/documents/${numDoc}`);\n  };\n\n  return (\n    <>\n      <h2>{Texts.searchInvoice}</h2>\n      <Form onSubmit={handlerSubmitForm}>\n        <Input\n          name=\"numberTTN\"\n          type=\"text\"\n          autoComplete=\"on\"\n          autoFocus\n          placeholder={Texts.enterNumber}\n          // defaultValue={documentId}\n          value={numberTTN}\n          onChange={handlerChangeInput}\n        />\n\n        <Buttom type=\"submit\">{Texts.getStatus}</Buttom>\n      </Form>\n    </>\n  );\n};\n\nexport default SearchTTN;\n","export const getHistoryTTN = state => state.historyTTN.history;\nexport const getFoundWarehouses = state => state.foundWarehouses.founds;\nexport const getTotalWarehouses = state => state.totalWarehouses.total;\n","import styled from 'styled-components';\n\nexport const WrapHistoryDocuments = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  min-width: 30%;\n  min-height: 120px;\n  padding: 10px 20px;\n\n  max-height: 150px;\n\n  border: 1px solid gray;\n  border-radius: 20px;\n`;\n\nexport const List = styled.ul`\n  display: block;\n  list-style-type: none;\n  overflow-y: auto;\n`;\nexport const Item = styled.li`\n  cursor: pointer;\n\n  &:hover {\n    font-weight: bold;\n  }\n\n  &.Active {\n    font-weight: bold;\n    cursor: auto;\n  }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  padding: 1px;\n  background-color: transparent;\n  cursor: pointer;\n\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  &:hover {\n    background-color: gray;\n  }\n`;\n","import { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getHistoryTTN } from 'reduxe/selectors';\nimport { clearHistory } from 'reduxe/sliceHistoryTTN';\nimport {\n  WrapHistoryDocuments,\n  List,\n  Item,\n  Button,\n} from './HistoryDocuments.styled';\nimport { AiOutlineClear } from 'react-icons/ai';\n\nconst HistoryDocuments = () => {\n  const dispatcher = useDispatch();\n  const historyTTN = useSelector(getHistoryTTN);\n\n  const navigate = useNavigate();\n  const { documentId } = useParams();\n\n  const handlerOnClick = numDoc => {\n    navigate(`/documents/${numDoc}`);\n  };\n\n  const handlerClearHistory = () => {\n    dispatcher(clearHistory());\n    navigate(`/documents`);\n  };\n\n  return (\n    <WrapHistoryDocuments>\n      <h2>Історія</h2>\n      {historyTTN.length > 0 && (\n        <>\n          <List>\n            {historyTTN.map(number => {\n              return (\n                <Item\n                  key={number}\n                  className={number === documentId ? 'Active' : ''}\n                  onClick={() => handlerOnClick(number)}\n                >\n                  {number}\n                </Item>\n              );\n            })}\n          </List>\n          <Button type=\"buttom\" onClick={handlerClearHistory}>\n            <AiOutlineClear size=\"16\" />\n          </Button>\n        </>\n      )}\n    </WrapHistoryDocuments>\n  );\n};\n\nexport default HistoryDocuments;\n","import styled from 'styled-components';\n\nexport const WrapStatusDocument = styled.div`\n  min-width: 30%;\n  min-height: 120px;\n  padding: 10px 20px;\n\n  flex-grow: 1;\n  border: 1px solid gray;\n  border-radius: 20px;\n`;\n\nexport const BoldText = styled.span`\n  font-weight: bold;\n`;\n","import PropTypes from 'prop-types';\n\nimport { WrapStatusDocument, BoldText } from './StatusDocument.styled';\nimport * as Texts from 'helpers/constantText';\n\nconst StatusDocument = ({ informationTTN }) => {\n  const { Number, Status, WarehouseSender, WarehouseRecipient } =\n    informationTTN;\n\n  return (\n    <WrapStatusDocument>\n      {informationTTN && (\n        <>\n          <h3>№ {Number}</h3>\n          <p>\n            <BoldText>{Texts.statusDelivery}</BoldText> {Status}\n          </p>\n          <p>\n            <BoldText>{Texts.sent}</BoldText> {WarehouseSender}\n          </p>\n          <p>\n            <BoldText>{Texts.received}</BoldText> {WarehouseRecipient}\n          </p>\n        </>\n      )}\n    </WrapStatusDocument>\n  );\n};\n\nStatusDocument.propTypes = {\n  informationTTN: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      Number: PropTypes.string,\n      Status: PropTypes.string,\n      WarehouseSender: PropTypes.string,\n      WarehouseRecipient: PropTypes.string,\n    }),\n  ]),\n};\n\nexport default StatusDocument;\n","import styled from 'styled-components';\n\nexport const WrapWarning = styled.div`\n  display: block;\n  height: 24px;\n  padding: 4px;\n`;\nexport const Warning = styled.p`\n  color: red;\n`;\n","import PropTypes from 'prop-types';\nimport { Warning, WrapWarning } from './WarningInformation.styled';\n\nconst WarningInformation = ({ information }) => {\n  return (\n    <WrapWarning>\n      <Warning>{information}</Warning>\n    </WrapWarning>\n  );\n};\n\nWarningInformation.propTypes = {\n  information: PropTypes.string,\n};\n\nexport default WarningInformation;\n","const { default: styled } = require('styled-components');\n\nexport const WrapInformation = styled.div`\n  margin-top: 10px;\n  display: flex;\n  gap: 20px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport SearchTTN from 'components/SearchTTN/SearchTTN';\nimport HistoryDocuments from 'components/HistoryDocuments/HistoryDocuments';\nimport StatusDocument from 'components/StatusDocument/StatusDocument';\nimport { fetchInformationDocument } from 'servises/apiNovaPoshta';\nimport WarningInformation from 'components/WarningInformation/WarningInformation';\nimport Spinner from 'components/Spinner/Spinner';\nimport { WrapInformation } from './Documents.styled';\nimport { addTTN } from 'reduxe/sliceHistoryTTN';\nimport * as Texts from 'helpers/constantText';\n\nconst regexp = /^\\d{14}$/;\n\nconst Documents = () => {\n  const dispatcher = useDispatch();\n\n  //number TTN for serch\n  const { documentId: numberTTN = '' } = useParams();\n\n  // Information ALL TTN\n  const [informationTTN, setInformationTTN] = useState('');\n\n  //Information about fetch information\n  const [warning, setWarning] = useState('');\n\n  //Flag show loader\n  const [showLoad, setShowLoad] = useState(false);\n\n  //32154654654564\n\n  useEffect(() => {\n    setWarning('');\n    setInformationTTN('');\n\n    if (!numberTTN) {\n      return;\n    }\n\n    if (!regexp.test(numberTTN)) {\n      setWarning(Texts.invalidFormat);\n      return;\n    }\n\n    const controller = new AbortController();\n\n    async function fetchInformation() {\n      setShowLoad(true);\n\n      try {\n        const { data: response } = await fetchInformationDocument(\n          controller,\n          numberTTN\n        );\n\n        if (!response.success) {\n          setWarning(Texts.invalidNumber);\n          return;\n        }\n\n        dispatcher(addTTN(numberTTN));\n\n        setInformationTTN(response.data[0]);\n        // CAtch\n      } catch (Error) {\n        setWarning(Texts.serviceDown);\n        // console.log('Error fetch information TTN', Error);\n      } finally {\n        setShowLoad(false);\n      }\n    }\n\n    fetchInformation();\n  }, [numberTTN, dispatcher]);\n\n  // * Returns\n  return (\n    <>\n      <SearchTTN />\n\n      <WarningInformation information={warning} />\n\n      <WrapInformation>\n        <StatusDocument informationTTN={informationTTN} />\n        <HistoryDocuments />\n      </WrapInformation>\n      {showLoad && <Spinner />}\n    </>\n  );\n};\n\nexport default Documents;\n","import axios from 'axios';\nimport { PAGE_FROM_REQUEST } from 'helpers/constants';\n\nconst KEY = '3b13b4f3bbf7d62fa77c4bcdea3099c7';\nconst URL = 'https://api.novaposhta.ua/v2.0/json/';\n\nconst gerRuquestStatusDocument = (documentNumber, phone = '') => {\n  return {\n    apiKey: KEY,\n    modelName: 'TrackingDocument',\n    calledMethod: 'getStatusDocuments',\n    methodProperties: {\n      Documents: [\n        {\n          DocumentNumber: documentNumber,\n          Phone: phone,\n        },\n      ],\n    },\n  };\n};\n\nconst getRequestSearchCity = nameCity => {\n  return {\n    apiKey: KEY,\n    modelName: 'Address',\n    calledMethod: 'searchSettlements',\n    methodProperties: {\n      CityName: nameCity,\n      Limit: '10',\n      Page: '1',\n    },\n  };\n};\n\nconst getRequestSearchWarehouse = (\n  cityRef,\n  typeOfWarehouseRef,\n  page,\n  searchText\n) => {\n  return {\n    apiKey: KEY,\n    modelName: 'Address',\n    calledMethod: 'getWarehouses',\n    methodProperties: {\n      CityRef: cityRef,\n\n      Page: page,\n      Limit: PAGE_FROM_REQUEST,\n      // Limit: 5000,\n      Language: 'UA',\n      TypeOfWarehouseRef: typeOfWarehouseRef,\n      FindByString: searchText,\n      // WarehouseId: '',\n    },\n  };\n};\n\nconst getRequestWarehouseTypes = () => {\n  return {\n    apiKey: KEY,\n    modelName: 'Address',\n    calledMethod: 'getWarehouseTypes',\n    methodProperties: {},\n  };\n};\n\nconst getRequestCity = cityRef => {\n  return {\n    apiKey: KEY,\n    modelName: 'Address',\n    calledMethod: 'getCities',\n    methodProperties: {\n      Ref: cityRef,\n      Page: '1',\n      Limit: '20',\n    },\n  };\n};\n\nexport async function fetchInformationDocument(controller, numberDocument) {\n  const result = await axios.post(\n    URL,\n    gerRuquestStatusDocument(numberDocument),\n    {\n      signal: controller.signal,\n    }\n  );\n\n  return result;\n}\n\nexport async function searchCity(controller, nameCity) {\n  const result = await axios.post(URL, getRequestSearchCity(nameCity), {\n    signal: controller.signal,\n  });\n\n  return result;\n}\n\nexport async function fetchWarehouses({\n  controller,\n  cityRef,\n  typeOfWarehouseRef = '',\n  page = 1,\n  searchText = '',\n}) {\n  const result = await axios.post(\n    URL,\n    getRequestSearchWarehouse(cityRef, typeOfWarehouseRef, page, searchText),\n    {\n      signal: controller.signal,\n    }\n  );\n\n  return result;\n}\n\nexport async function getWarehouseTypes(controller) {\n  const result = await axios.post(URL, getRequestWarehouseTypes(), {\n    signal: controller.signal,\n  });\n\n  return result;\n}\n\nexport async function fetchNameCity(controller, cityRef) {\n  const result = await axios.post(URL, getRequestCity(cityRef), {\n    signal: controller.signal,\n  });\n\n  return result;\n}\n"],"names":["Overlay","styled","modalRoot","document","querySelector","createPortal","className","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","PAGE_FROM_REQUEST","Form","Input","Buttom","navigate","useNavigate","useParams","documentId","useState","numberTTN","setNumberTTN","useEffect","Texts","onSubmit","event","preventDefault","numDoc","target","elements","value","name","type","autoComplete","autoFocus","placeholder","onChange","evn","getHistoryTTN","state","historyTTN","history","WrapHistoryDocuments","List","Item","Button","dispatcher","useDispatch","useSelector","length","map","number","onClick","clearHistory","size","WrapStatusDocument","BoldText","informationTTN","Number","Status","WarehouseSender","WarehouseRecipient","WrapWarning","Warning","information","WrapInformation","require","default","div","regexp","setInformationTTN","warning","setWarning","showLoad","setShowLoad","test","controller","AbortController","fetchInformation","fetchInformationDocument","response","data","success","addTTN","Spinner","KEY","URL","gerRuquestStatusDocument","documentNumber","phone","apiKey","modelName","calledMethod","methodProperties","Documents","DocumentNumber","Phone","getRequestSearchCity","nameCity","CityName","Limit","Page","getRequestSearchWarehouse","cityRef","typeOfWarehouseRef","page","searchText","CityRef","Language","TypeOfWarehouseRef","FindByString","getRequestWarehouseTypes","getRequestCity","Ref","numberDocument","axios","signal","result","searchCity","fetchWarehouses","getWarehouseTypes","fetchNameCity"],"sourceRoot":""}