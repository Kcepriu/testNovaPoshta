{"version":3,"file":"static/js/157.5994255b.chunk.js","mappings":"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","sources":["components/Spinner/Spinner.styled.js","components/Spinner/Spinner.js","helpers/constants.js","components/SearchTTN/SearchTTN.styled.js","components/SearchTTN/SearchTTN.js","reduxe/selectors.js","components/HistoryDocuments/HistoryDocuments.styled.js","components/HistoryDocuments/HistoryDocuments.js","components/StatusDocument/StatusDocument.styled.js","components/StatusDocument/StatusDocument.js","components/WarningInformation/WarningInformation.styled.js","components/WarningInformation/WarningInformation.js","pages/Documents/Documents.styled.js","hooks/useDocument.js","hooks/useCloseHistory.js","pages/Documents/Documents.js","servises/apiNovaPoshta.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.2);\n  z-index: 1200;\n`;\n","import { Bars } from 'react-loader-spinner';\nimport { createPortal } from 'react-dom';\nimport { Overlay } from './Spinner.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Spinner = () => {\n  return createPortal(\n    <Overlay className=\"overlay\">\n      <Bars\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        ariaLabel=\"bars-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </Overlay>,\n    modalRoot\n  );\n};\n\nexport default Spinner;\n","export const PAGE_FROM_REQUEST = 50;\nexport const regexpValidation = /^\\d{14}$/;\n","import styled from 'styled-components';\nimport * as Style from 'helpers/constatStyle';\n\nexport const Form = styled.form`\n  position: relative;\n  display: inline-block;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 16px;\n  background-color: ${Style.backgroundField};\n  box-shadow: ${Style.boxShadowField};\n  border-radius: ${Style.borderRadiusInput};\n  border: ${Style.borderField};\n`;\n\nexport const Buttom = styled.button`\n  position: absolute;\n  top: 2px;\n  right: 1px;\n\n  background-color: ${Style.backgroundField};\n  /* border-radius: ${Style.borderRadiusInput}; */\n  border: none;\n  padding: 2px 2px;\n  border-top-right-radius: ${Style.borderRadiusInput};\n  border-bottom-right-radius: ${Style.borderRadiusInput};\n  box-shadow: ${Style.boxShadowField};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: ${Style.hoverColor};\n    box-shadow: none;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Form, Buttom, Input } from './SearchTTN.styled';\nimport { urlDocuments } from 'helpers/constatnRoutes';\nimport IconToButton from 'components/IconToButton/IconToButton';\nimport * as Texts from 'helpers/constantText';\n\nconst SearchTTN = () => {\n  const navigate = useNavigate();\n  const { documentId = '' } = useParams();\n\n  const [numberTTN, setNumberTTN] = useState(documentId);\n\n  useEffect(() => {\n    setNumberTTN(documentId);\n  }, [documentId]);\n\n  const handlerChangeInput = evn => {\n    setNumberTTN(evn.target.value);\n  };\n\n  const handlerSubmitForm = event => {\n    //^\\d{14}$\n    //^[A-Z]{4}\\d{10}[A-Z]{3}$\n    event.preventDefault();\n    const numDoc = event.target.elements.numberTTN.value;\n    navigate(`${urlDocuments}/${numDoc}`);\n  };\n\n  return (\n    <div>\n      <h2>{Texts.searchInvoice}</h2>\n      <Form onSubmit={handlerSubmitForm}>\n        <Input\n          name=\"numberTTN\"\n          type=\"text\"\n          autoComplete=\"on\"\n          autoFocus\n          placeholder={Texts.enterNumber}\n          value={numberTTN}\n          onChange={handlerChangeInput}\n        />\n\n        <Buttom type=\"submit\">\n          <IconToButton nameIcon=\"icon-search\" className=\"iconSearch\" />\n        </Buttom>\n      </Form>\n    </div>\n  );\n};\n\nexport default SearchTTN;\n","export const getHistoryTTN = state => state.historyTTN.history;\nexport const getFoundWarehouses = state => state.foundWarehouses.founds;\nexport const getTotalWarehouses = state => state.totalWarehouses.total;\n","import styled from 'styled-components';\nimport * as Style from 'helpers/constatStyle';\n\nexport const WrapHistoryDocuments = styled.div`\n  position: relative;\n  display: flex;\n\n  min-height: 120px;\n  padding: 10px 20px;\n\n  min-height: 150px;\n\n  max-height: 250px;\n  background: ${Style.backgroundField};\n  border: ${Style.borderField};\n  /* внутренняя тень */\n  box-shadow: ${Style.boxShadowField};\n  border-radius: ${Style.borderRadiusField};\n\n  @media screen and (max-width: ${Style.tablet}) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    border-color: ${Style.ativeColor};\n    min-height: 250px;\n\n    &.hiden {\n      position: absolute;\n      white-space: nowrap;\n      width: 1px;\n      height: 1px;\n      overflow: hidden;\n      border: 0;\n      padding: 0;\n      clip: rect(0 0 0 0);\n      clip-path: inset(50%);\n      margin: -1px;\n    }\n  }\n`;\n\nexport const FiledHistoryDocuments = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 100%;\n`;\n\nexport const List = styled.ul`\n  display: block;\n  list-style-type: none;\n  overflow-y: auto;\n  padding-right: 8px;\n`;\nexport const Item = styled.li`\n  cursor: pointer;\n\n  &:hover {\n    font-weight: bold;\n    color: ${Style.hoverColor};\n  }\n\n  &.Active {\n    font-weight: bold;\n    cursor: auto;\n  }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 8px;\n  padding: 1px;\n  background-color: transparent;\n  cursor: pointer;\n\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  &:hover {\n    border-color: ${Style.ativeColor};\n    background-color: ${Style.hoverColor};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getHistoryTTN } from 'reduxe/selectors';\nimport { clearHistory } from 'reduxe/sliceHistoryTTN';\nimport { urlDocuments } from 'helpers/constatnRoutes';\nimport {\n  WrapHistoryDocuments,\n  FiledHistoryDocuments,\n  List,\n  Item,\n  Button,\n} from './HistoryDocuments.styled';\nimport { AiOutlineClear } from 'react-icons/ai';\n\nconst HistoryDocuments = ({ className, handlerClichHistory }) => {\n  const dispatcher = useDispatch();\n  const historyTTN = useSelector(getHistoryTTN);\n\n  const navigate = useNavigate();\n  const { documentId } = useParams();\n\n  const handlerOnClick = numDoc => {\n    navigate(`${urlDocuments}/${numDoc}`);\n    handlerClichHistory(true);\n  };\n\n  const handlerClearHistory = () => {\n    dispatcher(clearHistory());\n    navigate(`${urlDocuments}`);\n  };\n\n  return (\n    <WrapHistoryDocuments id=\"historyDocuments\" className={className}>\n      <FiledHistoryDocuments>\n        <h2>Історія</h2>\n        {historyTTN.length > 0 && (\n          <>\n            <List>\n              {historyTTN.map(number => {\n                return (\n                  <Item\n                    key={number}\n                    className={number === documentId ? 'Active' : ''}\n                    onClick={() => handlerOnClick(number)}\n                  >\n                    {number}\n                  </Item>\n                );\n              })}\n            </List>\n            <Button type=\"buttom\" onClick={handlerClearHistory}>\n              <AiOutlineClear size=\"16\" />\n            </Button>\n          </>\n        )}\n      </FiledHistoryDocuments>\n    </WrapHistoryDocuments>\n  );\n};\nHistoryDocuments.propTypes = {\n  className: PropTypes.string.isRequired,\n  handlerClichHistory: PropTypes.func.isRequired,\n};\n\nexport default HistoryDocuments;\n","import styled from 'styled-components';\nimport * as Style from 'helpers/constatStyle';\n\nexport const WrapStatusDocument = styled.div`\n  min-width: 30%;\n  min-height: 120px;\n  padding: 10px 20px;\n\n  flex-grow: 1;\n\n  background: ${Style.backgroundField};\n  border: ${Style.borderField};\n  /* внутренняя тень */\n  box-shadow: ${Style.boxShadowField};\n  border-radius: ${Style.borderRadiusField};\n`;\n\nexport const BoldText = styled.span`\n  font-weight: bold;\n`;\n","import PropTypes from 'prop-types';\n\nimport { WrapStatusDocument, BoldText } from './StatusDocument.styled';\nimport * as Texts from 'helpers/constantText';\n\nconst StatusDocument = ({ informationTTN }) => {\n  const { Number, Status, WarehouseSender, WarehouseRecipient } =\n    informationTTN;\n\n  return (\n    <WrapStatusDocument>\n      {informationTTN && (\n        <>\n          <h3>№ {Number}</h3>\n          <p>\n            <BoldText>{Texts.statusDelivery}</BoldText> {Status}\n          </p>\n          <p>\n            <BoldText>{Texts.sent}</BoldText> {WarehouseSender}\n          </p>\n          <p>\n            <BoldText>{Texts.received}</BoldText> {WarehouseRecipient}\n          </p>\n        </>\n      )}\n    </WrapStatusDocument>\n  );\n};\n\nStatusDocument.propTypes = {\n  informationTTN: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      Number: PropTypes.string,\n      Status: PropTypes.string,\n      WarehouseSender: PropTypes.string,\n      WarehouseRecipient: PropTypes.string,\n    }),\n  ]),\n};\n\nexport default StatusDocument;\n","import styled from 'styled-components';\nimport * as Style from 'helpers/constatStyle';\n\nexport const WrapWarning = styled.div`\n  display: block;\n  height: 24px;\n  padding: 4px 4px 4px 16px;\n`;\nexport const Warning = styled.p`\n  color: ${Style.errorColor};\n  font-size: 14px;\n  line-height: 1.2;\n`;\n","import PropTypes from 'prop-types';\nimport { Warning, WrapWarning } from './WarningInformation.styled';\n\nconst WarningInformation = ({ information }) => {\n  return (\n    <WrapWarning>\n      <Warning>{information}</Warning>\n    </WrapWarning>\n  );\n};\n\nWarningInformation.propTypes = {\n  information: PropTypes.string,\n};\n\nexport default WarningInformation;\n","import styled from 'styled-components';\n// const { default: styled } = require('styled-components');\n\nimport * as Style from 'helpers/constatStyle';\n\nexport const WrapInformation = styled.div`\n  position: relative;\n  margin-top: 10px;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const ButtonShowHistory = styled.button`\n  position: absolute;\n  right: 8px;\n  bottom: -24px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 20px;\n  border: ${Style.borderField};\n  background: ${Style.backgroundField};\n  box-shadow: ${Style.boxShadowField};\n  width: 32px;\n  height: 32px;\n  padding: 1px;\n\n  @media screen and (min-width: ${Style.tablet}) {\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n    border: 0;\n    padding: 0;\n    clip: rect(0 0 0 0);\n    clip-path: inset(50%);\n    margin: -1px;\n  }\n\n  &:hover {\n    border-color: ${Style.ativeColor};\n    /* background-color: ${Style.hoverColor}; */\n  }\n`;\n\nexport const WrapSearch = styled.div`\n  position: relative;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { fetchInformationDocument } from 'servises/apiNovaPoshta';\nimport { addTTN } from 'reduxe/sliceHistoryTTN';\nimport * as Texts from 'helpers/constantText';\nimport { regexpValidation } from 'helpers/constants';\n\nconst useDocument = () => {\n  const dispatcher = useDispatch();\n  //number TTN for serch\n  const { documentId: numberTTN = '' } = useParams();\n\n  // Information ALL TTN\n  const [informationTTN, setInformationTTN] = useState('');\n\n  //Information about fetch information\n  const [warning, setWarning] = useState('');\n\n  //Flag show loader\n  const [showLoad, setShowLoad] = useState(false);\n\n  useEffect(() => {\n    setWarning('');\n    setInformationTTN('');\n\n    if (!numberTTN) {\n      return;\n    }\n\n    if (!regexpValidation.test(numberTTN)) {\n      setWarning(Texts.invalidFormat);\n      return;\n    }\n\n    const controller = new AbortController();\n\n    async function fetchInformation() {\n      setShowLoad(true);\n\n      try {\n        const { data: response } = await fetchInformationDocument(\n          controller,\n          numberTTN\n        );\n\n        if (!response.success) {\n          setWarning(Texts.invalidNumber);\n          return;\n        }\n\n        dispatcher(addTTN(numberTTN));\n\n        setInformationTTN(response.data[0]);\n        // CAtch\n      } catch (Error) {\n        setWarning(Texts.serviceDown);\n      } finally {\n        setShowLoad(false);\n      }\n    }\n\n    fetchInformation();\n  }, [numberTTN, dispatcher]);\n\n  return [informationTTN, warning, showLoad];\n};\n\nexport default useDocument;\n","import { useEffect, useState } from 'react';\nconst useCloseHistory = () => {\n  const [isCloseHistory, setIsCloseHistory] = useState(false);\n\n  useEffect(() => {\n    //For close this element\n    const handlerKeyDownESC = event => {\n      console.log('ESC');\n\n      // key press esc Close modal\n      if (event.key === 'Escape') setIsCloseHistory(prev => !prev);\n    };\n\n    const handlerClickBody = event => {\n      if (event.target.closest('#historyDocuments')) return;\n      if (event.target.closest('#buttonHistoryDocuments')) return;\n\n      setIsCloseHistory(prev => !prev);\n    };\n\n    window.addEventListener('keydown', handlerKeyDownESC);\n    document.body.addEventListener('click', handlerClickBody);\n\n    return () => {\n      window.removeEventListener('keydown', handlerKeyDownESC);\n      document.body.removeEventListener('click', handlerClickBody);\n    };\n  }, []);\n  return [isCloseHistory];\n};\n\nexport default useCloseHistory;\n","import { useState, useEffect } from 'react';\n\nimport { IoIosHourglass } from 'react-icons/io';\n\nimport SearchTTN from 'components/SearchTTN/SearchTTN';\nimport HistoryDocuments from 'components/HistoryDocuments/HistoryDocuments';\nimport StatusDocument from 'components/StatusDocument/StatusDocument';\nimport WarningInformation from 'components/WarningInformation/WarningInformation';\nimport Spinner from 'components/Spinner/Spinner';\nimport {\n  WrapInformation,\n  ButtonShowHistory,\n  WrapSearch,\n} from './Documents.styled';\nimport useDocument from 'hooks/useDocument';\nimport useCloseHistory from 'hooks/useCloseHistory';\n\nconst Documents = () => {\n  const [informationTTN, warning, showLoad] = useDocument();\n\n  //Show- hidden history element\n  const [hidenHistory, setHidenHistory] = useState(true);\n  const [isCloseHistory] = useCloseHistory();\n\n  useEffect(() => {\n    setHidenHistory(true);\n  }, [isCloseHistory]);\n\n  const handlerShowHideHistory = () => {\n    setHidenHistory(prev => !prev);\n  };\n\n  // * Returns\n  return (\n    <>\n      <WrapSearch>\n        <SearchTTN />\n        <ButtonShowHistory\n          type=\"button\"\n          id=\"buttonHistoryDocuments\"\n          onClick={handlerShowHideHistory}\n          size=\"16\"\n        >\n          <IoIosHourglass />\n        </ButtonShowHistory>\n      </WrapSearch>\n\n      <WarningInformation information={warning} />\n\n      <WrapInformation>\n        <StatusDocument informationTTN={informationTTN} />\n        <HistoryDocuments\n          className={hidenHistory ? 'hiden' : ''}\n          handlerClichHistory={setHidenHistory}\n        />\n      </WrapInformation>\n\n      {showLoad && <Spinner />}\n    </>\n  );\n};\n\nexport default Documents;\n","import axios from 'axios';\nimport { PAGE_FROM_REQUEST } from 'helpers/constants';\n\nconst KEY = '3b13b4f3bbf7d62fa77c4bcdea3099c7';\nconst URL = 'https://api.novaposhta.ua/v2.0/json/';\n\nconst gerRuquestStatusDocument = (documentNumber, phone = '') => {\n  return {\n    apiKey: KEY,\n    modelName: 'TrackingDocument',\n    calledMethod: 'getStatusDocuments',\n    methodProperties: {\n      Documents: [\n        {\n          DocumentNumber: documentNumber,\n          Phone: phone,\n        },\n      ],\n    },\n  };\n};\n\nconst getRequestSearchCity = nameCity => {\n  return {\n    apiKey: KEY,\n    modelName: 'Address',\n    calledMethod: 'searchSettlements',\n    methodProperties: {\n      CityName: nameCity,\n      Limit: '10',\n      Page: '1',\n    },\n  };\n};\n\nconst getRequestSearchWarehouse = (\n  cityRef,\n  typeOfWarehouseRef,\n  page,\n  searchText\n) => {\n  return {\n    apiKey: KEY,\n    modelName: 'Address',\n    calledMethod: 'getWarehouses',\n    methodProperties: {\n      CityRef: cityRef,\n\n      Page: page,\n      Limit: PAGE_FROM_REQUEST,\n      // Limit: 5000,\n      Language: 'UA',\n      TypeOfWarehouseRef: typeOfWarehouseRef,\n      FindByString: searchText,\n      // WarehouseId: '',\n    },\n  };\n};\n\nconst getRequestWarehouseTypes = () => {\n  return {\n    apiKey: KEY,\n    modelName: 'Address',\n    calledMethod: 'getWarehouseTypes',\n    methodProperties: {},\n  };\n};\n\nconst getRequestCity = cityRef => {\n  return {\n    apiKey: KEY,\n    modelName: 'Address',\n    calledMethod: 'getCities',\n    methodProperties: {\n      Ref: cityRef,\n      Page: '1',\n      Limit: '20',\n    },\n  };\n};\n\nexport async function fetchInformationDocument(controller, numberDocument) {\n  const result = await axios.post(\n    URL,\n    gerRuquestStatusDocument(numberDocument),\n    {\n      signal: controller.signal,\n    }\n  );\n\n  return result;\n}\n\nexport async function searchCity(controller, nameCity) {\n  const result = await axios.post(URL, getRequestSearchCity(nameCity), {\n    signal: controller.signal,\n  });\n\n  return result;\n}\n\nexport async function fetchWarehouses({\n  controller,\n  cityRef,\n  typeOfWarehouseRef = '',\n  page = 1,\n  searchText = '',\n}) {\n  const result = await axios.post(\n    URL,\n    getRequestSearchWarehouse(cityRef, typeOfWarehouseRef, page, searchText),\n    {\n      signal: controller.signal,\n    }\n  );\n\n  return result;\n}\n\nexport async function getWarehouseTypes(controller) {\n  const result = await axios.post(URL, getRequestWarehouseTypes(), {\n    signal: controller.signal,\n  });\n\n  return result;\n}\n\nexport async function fetchNameCity(controller, cityRef) {\n  const result = await axios.post(URL, getRequestCity(cityRef), {\n    signal: controller.signal,\n  });\n\n  return result;\n}\n"],"names":["Overlay","styled","modalRoot","document","querySelector","createPortal","className","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","PAGE_FROM_REQUEST","regexpValidation","Form","Input","Style","Buttom","navigate","useNavigate","useParams","documentId","useState","numberTTN","setNumberTTN","useEffect","Texts","onSubmit","event","preventDefault","numDoc","target","elements","value","urlDocuments","name","type","autoComplete","autoFocus","placeholder","onChange","evn","IconToButton","nameIcon","getHistoryTTN","state","historyTTN","history","WrapHistoryDocuments","FiledHistoryDocuments","List","Item","Button","handlerClichHistory","dispatcher","useDispatch","useSelector","id","length","map","number","onClick","clearHistory","size","WrapStatusDocument","BoldText","informationTTN","Number","Status","WarehouseSender","WarehouseRecipient","WrapWarning","Warning","information","WrapInformation","ButtonShowHistory","WrapSearch","setInformationTTN","warning","setWarning","showLoad","setShowLoad","controller","AbortController","fetchInformation","fetchInformationDocument","response","data","success","addTTN","isCloseHistory","setIsCloseHistory","handlerKeyDownESC","console","log","key","prev","handlerClickBody","closest","window","addEventListener","body","removeEventListener","useDocument","hidenHistory","setHidenHistory","useCloseHistory","Spinner","KEY","URL","gerRuquestStatusDocument","documentNumber","phone","apiKey","modelName","calledMethod","methodProperties","Documents","DocumentNumber","Phone","getRequestSearchCity","nameCity","CityName","Limit","Page","getRequestSearchWarehouse","cityRef","typeOfWarehouseRef","page","searchText","CityRef","Language","TypeOfWarehouseRef","FindByString","getRequestWarehouseTypes","getRequestCity","Ref","numberDocument","axios","signal","result","searchCity","fetchWarehouses","getWarehouseTypes","fetchNameCity"],"sourceRoot":""}